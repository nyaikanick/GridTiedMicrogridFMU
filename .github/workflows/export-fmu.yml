name: Build FMU using OpenModelica

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-fmu:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common wget gnupg2 curl unzip

      - name: Add OpenModelica repository
        run: |
          wget -q http://build.openmodelica.org/apt/openmodelica.asc -O - | sudo gpg --dearmor -o /usr/share/keyrings/openmodelica-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/openmodelica-keyring.gpg] http://build.openmodelica.org/apt jammy stable" | sudo tee /etc/apt/sources.list.d/openmodelica.list
          sudo apt-get update

      - name: Install OpenModelica
        run: |
          sudo apt-get install -y openmodelica
          apt-cache search omlib > omlib_list.txt
          cat omlib_list.txt
          sudo apt-get install -y 'omlib-*' || echo "Some libraries may not be available, proceeding..."

      - name: Install Modelica Standard Library
        continue-on-error: true
        run: |
          echo "Starting Modelica library installation"
          mkdir -p /home/runner/.openmodelica/libraries
          echo 'installPackage(Modelica, "3.2.3", exactMatch=true);' > install_modelica.mos
          omc +showErrorMessages install_modelica.mos > install_modelica.log 2>&1 || true
          cat install_modelica.log
          if grep -q "true" install_modelica.log; then
            echo "Modelica 3.2.3 installed successfully"
          else
            echo "Failed to install Modelica 3.2.3"
            exit 1
          fi
          ls -l /home/runner/.openmodelica/libraries/ > library_contents.txt
          cat library_contents.txt
          export MODELICAPATH=/home/runner/.openmodelica/libraries:$MODELICAPATH
          echo "MODELICAPATH=$MODELICAPATH" > modelica_paths.txt
          omc +showErrorMessages -d=infoXmlOperations Modelica >> modelica_paths.txt 2>&1
          cat modelica_paths.txt
          echo "Completed Modelica library installation"

      - name: Verify installation and build FMU
        run: |
          echo "Starting model validation and FMU generation"
          which omc
          omc --version
          export MODELICAPATH=/home/runner/.openmodelica/libraries:$MODELICAPATH
          echo "MODELICAPATH=$MODELICAPATH"
          if [ ! -f GridTiedMicrogridRLC.mo ]; then
            echo "Error: GridTiedMicrogridRLC.mo not found"
            exit 1
          fi
          ls -l GridTiedMicrogridRLC.mo
          omc +showErrorMessages GridTiedMicrogridRLC.mo > model_check.log 2>&1
          cat model_check.log
          if grep -q "Error" model_check.log; then
            echo "Validation errors detected, see model_check.log"
            exit 1
          fi
          omc -f GridTiedMicrogridRLC.fmu +showErrorMessages GridTiedMicrogridRLC.mo > fmu_build.log 2>&1
          cat fmu_build.log
          if grep -q "Error" fmu_build.log; then
            echo "FMU generation errors detected, see fmu_build.log"
            exit 1
          fi
          if [ -f GridTiedMicrogridRLC.fmu ]; then
            echo "FMU generated successfully"
            ls -l GridTiedMicrogridRLC.fmu
          else
            echo "Error: FMU file not found"
            exit 1
          fi
          echo "Completed model validation and FMU generation"

      - name: Upload logs for debugging
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Debug-Logs
          path: |
            omlib_list.txt
            modelica_paths.txt
            install_modelica.log
            library_contents.txt
            model_check.log
            fmu_build.log

      - name: Upload FMU
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: GridTiedMicrogridRLC-FMU
          path: GridTiedMicrogridRLC.fmu
