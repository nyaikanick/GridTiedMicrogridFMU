name: Build FMU using OpenModelica

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-fmu:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common wget gnupg2 curl unzip

      - name: Add OpenModelica repository
        run: |
          # Add OpenModelica GPG key
          wget -q http://build.openmodelica.org/apt/openmodelica.asc -O - | sudo gpg --dearmor -o /usr/share/keyrings/openmodelica-keyring.gpg
          # Add OpenModelica stable repository for Ubuntu 22.04
          echo "deb [signed-by=/usr/share/keyrings/openmodelica-keyring.gpg] http://build.openmodelica.org/apt jammy stable" | sudo tee /etc/apt/sources.list.d/openmodelica.list
          sudo apt-get update

      - name: Install OpenModelica
        run: |
          sudo apt-get install -y openmodelica
          # Check available Modelica libraries
          apt-cache search omlib > omlib_list.txt
          cat omlib_list.txt
          # Install all available OpenModelica libraries
          sudo apt-get install -y 'omlib-*' || echo "Some libraries may not be available, proceeding..."

      - name: Install Modelica Standard Library
        run: |
          # Create library directory
          mkdir -p /home/runner/.openmodelica/libraries
          # Install Modelica 3.2.3 using omc
          echo 'installPackage(Modelica, "3.2.3", exactMatch=true);' > install_modelica.mos
          omc +showErrorMessages install_modelica.mos > install_modelica.log 2>&1 || true
          cat install_modelica.log
          # Check if installation was successful
          if grep -q "true" install_modelica.log; then
            echo "Modelica 3.2.3 installed successfully"
          else
            echo "Failed to install Modelica 3.2.3"
            exit 1
          fi
          # Verify library directory
          ls -l /home/runner/.openmodelica/libraries/ > library_contents.txt
          cat library_contents.txt
          # Verify Modelica library availability
          export MODELICAPATH=/home/runner/.openmodelica/libraries:$MODELICAPATH
          echo "MODELICAPATH=$MODELICAPATH" >> modelica_paths.txt
          omc +showErrorMessages -d=infoXmlOperations --version=3.2.3 Modelica >> modelica_paths.txt 2>&1
          cat modelica_paths.txt

      - name: Verify installation and build FMU
        run: |
          # Verify OpenModelica installation
          which omc
          omc --version
          # Set MODELICAPATH
          export MODELICAPATH=/home/runner/.openmodelica/libraries:$MODELICAPATH
          echo "MODELICAPATH=$MODELICAPATH"
          # Ensure the .mo file exists
          ls -l GridTiedMicrogridRLC.mo
          # Validate model file
          omc +showErrorMessages GridTiedMicrogridRLC.mo > model_check.log 2>&1 || echo "Model validation failed, see model_check.log"
          cat model_check.log
          # Build FMU with detailed logging
          omc -f GridTiedMicrogridRLC.fmu +showErrorMessages GridTiedMicrogridRLC.mo > fmu_build.log 2>&1 || echo "FMU generation failed, see fmu_build.log"
          cat fmu_build.log
          # Verify FMU was created
          ls -l GridTiedMicrogridRLC.fmu || echo "FMU file not found"

      - name: Upload logs for debugging
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Debug-Logs
          path: |
            omlib_list.txt
            modelica_paths.txt
            install_modelica.log
            library_contents.txt
            model_check.log
            fmu_build.log

      - name: Upload FMU
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: GridTiedMicrogridRLC-FMU
          path: GridTiedMicrogridRLC.fmu
